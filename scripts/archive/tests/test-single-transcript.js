#!/usr/bin/env node

import fetch from 'node-fetch';
import dotenv from 'dotenv';

dotenv.config();

const SUPADATA_API_KEY = process.env.SUPADATA_API_KEY;
const API_BASE_URL = 'https://api.supadata.ai/v1';

async function testSingleTranscript(videoId) {
  const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;
  const params = new URLSearchParams({
    url: videoUrl,
    includeTimestamps: 'true',
    lang: 'en'
  });

  console.log(`\n🔍 Fetching transcript for: ${videoUrl}\n`);

  const response = await fetch(`${API_BASE_URL}/youtube/transcript?${params}`, {
    method: 'GET',
    headers: {
      'x-api-key': SUPADATA_API_KEY
    }
  });

  if (!response.ok) {
    const error = await response.text();
    console.error(`Error: ${response.status} - ${error}`);
    return;
  }

  const data = await response.json();
  
  console.log('📊 Response Details:');
  console.log(`- Available languages: ${data.availableLangs?.join(', ') || 'none'}`);
  console.log(`- Current language: ${data.lang}`);
  console.log(`- Total segments: ${data.content?.length || 0}`);
  console.log(`- Is auto-generated: ${data.autoGenerated || 'unknown'}`);
  
  if (data.content && data.content.length > 0) {
    // Show first 5 segments
    console.log('\n📝 First 5 segments:');
    data.content.slice(0, 5).forEach((seg, i) => {
      console.log(`${i+1}. [${seg.start}s]: "${seg.text}"`);
    });
    
    // Calculate total words
    const fullText = data.content.map(s => s.text).join(' ');
    const wordCount = fullText.split(/\s+/).length;
    console.log(`\n📈 Total words: ${wordCount}`);
  }
}

// Test with a video that should have a good transcript
const testVideoId = process.argv[2] || 'VJwoSfTOhyM'; // Water Bottle Flip 2
testSingleTranscript(testVideoId);
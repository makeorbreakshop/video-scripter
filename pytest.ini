[pytest]
# Pytest configuration for Agentic Mode testing

testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test organization
markers =
    integration: Integration tests that require external services
    slow: Tests that take more than 5 seconds
    api: API endpoint tests
    tools: Individual tool tests
    unit: Unit tests with mocked dependencies
    smoke: Quick smoke tests for CI
    phase1: Phase 1 implementation tests
    phase2: Phase 2 implementation tests
    agentic: Agentic mode specific tests
    classic: Classic mode specific tests
    benchmark: Performance benchmark tests

# Test output formatting
addopts = 
    --strict-markers
    --tb=short
    --disable-warnings
    -ra
    --color=yes

# Async configuration
asyncio_mode = auto

# Coverage settings
[coverage:run]
source = 
    api
    lib
    app/api

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

# Ignore certain files
[coverage:html]
directory = htmlcov